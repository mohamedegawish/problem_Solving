#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int n;
    string s;
    cin >> n >> s;

    string colors = "RGB";
    vector<string> perms;


    sort(colors.begin(), colors.end());
    do {
        perms.push_back(colors);
    } while (next_permutation(colors.begin(), colors.end()));

    int min_changes = n + 1;
    string best_garland;

    for (auto &perm : perms) {
        int changes = 0;
        string temp = s;

        for (int i = 0; i < n; ++i) {
            if (s[i] != perm[i % 3]) {
                changes++;
                temp[i] = perm[i % 3];
            }
        }

        if (changes < min_changes) {
            min_changes = changes;
            best_garland = temp;
        }
    }

    cout << min_changes << endl;
    cout << best_garland << endl;

    return 0;
}
